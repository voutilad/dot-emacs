#+TITLE: Clojure
#+AUTHOR: Dave Voutila
#+EMAIL: voutilad@gmail.com

* Clojure Mode
  Basic install...borrowed from Howard Abrams.

  #+BEGIN_SRC emacs-lisp
    (use-package clojure-mode
      :ensure t
      :init
      (defconst clojure--prettify-symbols-alist
        '(("fn"   . ?λ)
          ("__"   . ?⁈)))

      :config
      (add-hook 'clojure-mode-hook 'global-prettify-symbols-mode)
      :bind (("C-c d f" . cider-code)
             ("C-c d g" . cider-grimoire)
             ("C-c d w" . cider-grimoire-web)
             ("C-c d c" . clojure-cheatsheet)
             ("C-c d d" . dash-at-point)))
  #+END_SRC

* Cider REPL
  The defacto REPL hands down. Borrowing from Howard, but not using
  =slamhound= yet as I have no use case at the moment.

  #+BEGIN_SRC emacs-lisp
    (use-package cider
      :ensure t
      :commands (cider cider-connect cider-jack-in)

      :init
      (setq cider-auto-select-error-buffer t
            cider-repl-pop-to-buffer-on-connect nil
            cider-repl-use-clojure-font-lock t
            cider-repl-wrap-history t
            cider-repl-history-size 1000
            cider-show-error-buffer t
            nrepl-hide-special-buffers t
            ;; Stop error buffer from popping up while working in buffers other than the REPL:
            nrepl-popup-stacktraces nil
            ;; CIDER likes to try to bind to IPv6 :: but for some reason Java hates it on OpenBSD
            cider-lein-parameters "repl :headless :host 0.0.0.0"
            )

      ;; (add-hook 'cider-mode-hook 'cider-turn-on-eldoc-mode)
      (add-hook 'cider-mode-hook 'company-mode)

      (add-hook 'cider-repl-mode-hook 'paredit-mode)
      (add-hook 'cider-repl-mode-hook 'superword-mode)
      (add-hook 'cider-repl-mode-hook 'company-mode)
      (add-hook 'cider-test-report-mode 'jcf-soft-wrap)

      :bind (:map cider-mode-map
             ("C-c C-v C-c" . cider-send-and-evaluate-sexp)
             ("C-c C-p"     . cider-eval-print-last-sexp)))
  #+END_SRC
